#!/usr/bin/env bash

## Author  : Aditya Shakya (adi1090x)
## Github  : @adi1090x
#
## Applets : MPD (music)

# Import Current Theme
source "$HOME"/.config/rofi/applets/shared/theme.bash
theme="$type/$style"

# Theme Elements
prompt='Network'

if [[ "$theme" == *'type-5'* ]]; then
	list_col='1'
	list_row='5'
	win_width='520px'
fi

# Options
layout=`cat ${theme} | grep 'USE_ICON' | cut -d'=' -f2`
wifis=""

get_wifis() {
  wpa_cli scan *> /dev/null \
    && wpa_cli scan_results \
    | grep -v "bssid / frequency" \
    | grep -v "Selected interface" \
    | cut -d$'\t' -f 5 \
    | sed 's/ /___/g'
}

get_psk() {
  echo "$(wpa_cli scan *> /dev/null \
    && wpa_cli scan_results \
    | grep -v "bssid / frequency" \
    | grep -v "Selected interface" \
    | grep "${1}" \
    | cut -d$'\t' -f 4)"
}

while [ "${wifis}x" == "x" ];do
  wifis="$(get_wifis)"
done

wifis=$(
  wifi_list=()
  for i in ${wifis}; do
    is_in=false
    if [[ ! ${wifi_list[*]} =~ ${i} && "${i}" != *\x00* ]]; then
      wifi_list+=("${i} ")
      echo ${i}
    fi
  done
)

wifis_string="󰖂 WireGuard\n"
count=0
for i in ${wifis}; do
  i=$(echo $i | sed 's/___/ /g')
  option=" ${i}"
  if [[ $(get_psk ${i}) == "[WPA"* ]]; then
    option=" ${i}"
  fi
  wifis_string+="${option}\n"
  count=$((count+1))
done

# Rofi CMD
rofi_cmd() {
	echo "$(
    rofi -theme-str "window {width: $win_width;}" \
		  -theme-str "listview {columns: $list_col; lines: $list_row;}" \
		  -theme-str 'textbox-prompt-colon {str: "󰤥";}' \
		  -dmenu \
		  -p "$prompt" \
		  -mesg "Choice Wifi" \
		  -markup-rows \
  )"
}

# Pass variables to rofi dmenu
run_rofi() {
  echo "$(echo -e "${1}" | rofi_cmd)"
}

connect() {
  up_or_down=null
  wifi_id="${3}"
  name="${2}"
  with_pass=${1}

  while [[ ${up_or_down} == null || ${up_or_down} == false ]]; do
    curent=$(
      wpa_cli list_networks \
        | grep "$(
          wpa_cli status \
            | grep ssid \
            | grep -v bssid \
            | cut -d '=' -f 2
          )" \
        | cut -d$'\t' -f 1
    )

    if [[ "${wifi_id}x" != "x" && ${up_or_down} == null ]]; then
      echo "
        disconnect
        set_network ${curent} priority 0
        set_network ${wifi_id} priority 10
        reconnect
      " | wpa_cli > /dev/null
    elif [[ "${wifi_id}x" != "x" && ${up_or_down} == false ]]; then
      pass="$(run_rofi "Password")"
      if [ "${pass}x" == "x" ]; then
        echo "
          disconnect
          disable_network ${wifi_id}
          set_network ${wifi_id} priority 0
          remove_network ${wifi_id}
          reconnect
        " | wpa_cli > /dev/null
        exit 0
      fi
      echo "
        disconnect
        disable_network ${wifi_id}
        set_network ${wifi_id} priority 0
        remove_network ${wifi_id}
        add_network
        set_network ${wifi_id} ssid \"${name}\"
        set_network ${wifi_id} psk \"${pass}\"
        set_network ${wifi_id} key_mgmt WPA-PSK
        set_network ${wifi_id} priority 10
        enable_network ${wifi_id}
        reconnect
      " | wpa_cli > /dev/null
    else
      wifi_id=$(wpa_cli add_network | grep -v 'Selected interface')
      if [ "${with_pass}x" == "true" ]; then
        pass="$(run_rofi "Password")"
        if [ "${pass}x" == "x" ]; then
          echo "
            disconnect
            disable_network ${wifi_id}
            set_network ${wifi_id} priority 0
            remove_network ${wifi_id}
            reconnect
          " | wpa_cli > /dev/null
          exit 0
        fi
        echo "
          disconnect
          set_network ${curent} priority 0
          set_network ${wifi_id} ssid \"${name}\"
          set_network ${wifi_id} psk \"${pass}\"
          set_network ${wifi_id} key_mgmt WPA-PSK
          set_network ${wifi_id} priority 10
          enable_network ${wifi_id}
          reconnect
        " | wpa_cli > /dev/null
      else
        echo "
          disconnect
          set_network ${curent} priority 0
          set_network ${wifi_id} ssid \"${name}\"
          set_network ${wifi_id} key_mgmt NONE
          set_network ${wifi_id} priority 10
          enable_network ${wifi_id}
          reconnect
        " | wpa_cli > /dev/null
      fi
    fi

    sleep 8
    curent=$(
      wpa_cli status \
        | grep ssid \
        | grep -v bssid \
        | cut -d '=' -f 2
      )
    if [ "${curent}x" == "${name}x" ]; then
      up_or_down=true
    else
      up_or_down=false
    fi
  done
}

get_wireguard() {
  vpn="aaa"
  while [ "${vpn}x" != "x" ]; do
    vpn_list=""

    for i in $(
      ls /etc/wireguard/ \
        | grep '.conf' \
        | sed 's/.conf//g'
    ); do
      if [ "$(
        ip -br a \
          | grep ${i}
      )x" == "x" ]; then
        vpn_list+=" ${i}\n"
      else
        vpn_list+=" ${i}\n"
      fi
    done

    vpn=$(run_rofi "${vpn_list::-2}")
    vpn_name=$(echo "${vpn}" | cut -d ' ' -f 2)
    vpn_icon=$(echo "${vpn}" | cut -d ' ' -f 1)
    echo ${vpn_name}

    if [ "${vpn}x" == "x" ]; then
      exit 0
    fi

    if [ "$(vpn_icon)" == "" ];then
      sudo wg-quick up ${vpn_name}
    else
      sudo wg-quick down ${vpn_name}
    fi
  done
}

# Execute Command
wifi_conn() {
  if [ "${1} ${2}x" == "󰖂 WireGuardx" ]; then
    get_wireguard
    exit 0
  fi
  interface=$(iw dev | awk '$1=="Interface"{print $2}')
  name=${2}
  lock_icon=${1}
  with_pass=true

  if [[ "${name}x" == "x" && "${lock_icon}x" != "x" ]]; then
    name=${lock_icon}
  fi

  if [ "${name}x" == "x" ]; then
    exit 0
  fi

  if [ "${lock_icon}x" != "x" ]; then
    with_pass=false
  fi

  saved_wifi="$(
    wpa_cli list_networks \
      | grep -v 'Selected interface' \
      | grep -v 'network id / ssid /' \
      | grep "${name}" \
      | cut -d$'\t' -f 1
  )"

  if [ "${saved_wifi}x" == "x" ];then
    connect ${with_pass} "${name}"
  else
    connect ${with_pass} "${name}" "${saved_wifi}"
  fi
}

# Actions
wifi_conn $(run_rofi "${wifis_string::-2}")